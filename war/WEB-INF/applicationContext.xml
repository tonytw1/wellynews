<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">
<beans>

	<!-- This bean substitutes variables from the env properties file -->
	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location">
			<value>file:conf/springapp.properties</value>
		</property>
	</bean>


	 <bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
        <property name="configLocation">
            <value>classpath:application-ehcache.xml</value>
        </property>
    </bean> 




<bean id="linkChecker" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
	<property name="transactionManager" ref="transactionManager" />
	<property name="target" ref="linkCheckerTarget" />
	<property name="transactionAttributeSource">
		<bean class="org.springframework.transaction.annotation.AnnotationTransactionAttributeSource" />
	</property>	
</bean>
<bean name="linkCheckerJob" class="nz.co.searchwellington.jobs.LinkCheckerJob">
	<constructor-arg ref="linkCheckerQueue" />
	<constructor-arg ref="linkChecker" />
</bean>



<bean id="flickrJobTarget" class="nz.co.searchwellington.jobs.FlickrJob">
		<constructor-arg ref="flickrDAO" />
		<constructor-arg ref="resourceDAO" />
		<constructor-arg ref="configDAO" />
</bean>

<bean id="flickrJob" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
	<property name="transactionManager" ref="transactionManager" />
	<property name="target" ref="flickrJobTarget" />
	<property name="transactionAttributeSource">
		<bean class="org.springframework.transaction.annotation.AnnotationTransactionAttributeSource" />
	</property>	
</bean>
	

<bean id="twitterListenerJobTarget" class="nz.co.searchwellington.jobs.TwitterListenerJob">
		<constructor-arg ref="twitterService" />
		<constructor-arg ref="twitterNewsitemBuilderService" />
		<constructor-arg ref="resourceDAO" />
		<constructor-arg ref="linkCheckerQueue" />
		<constructor-arg ref="publisherGuessingService" />	
</bean>

<bean id="twitterListenerJob" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
	<property name="transactionManager" ref="transactionManager" />
	<property name="target" ref="twitterListenerJobTarget" />
	<property name="transactionAttributeSource">
		<bean class="org.springframework.transaction.annotation.AnnotationTransactionAttributeSource" />
	</property>	
</bean>





	


























<import resource="timertasks.xml"/>




<bean id="feedAcceptanceDecider" class="nz.co.searchwellington.feeds.FeedAcceptanceDecider">
	<constructor-arg ref="resourceDAO" />	
	<constructor-arg ref="supressionDAO" />
	<constructor-arg ref="urlCleaner" />
</bean>


<bean id="feedBurnerRedirectResolverService" class="nz.co.searchwellington.feeds.FeedBurnerRedirectResolverService" />

<bean id="urlCleaner" class="nz.co.searchwellington.utils.UrlCleaner">
	<constructor-arg>
		<list>
			<ref bean="feedBurnerRedirectResolverService" />
			<ref bean="tinyUrlResolverService" />
		</list>
	</constructor-arg>
</bean>

<bean id="feedReader" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
	<property name="transactionManager" ref="transactionManager" />
	<property name="target" ref="feedReaderTarget" />
	<property name="transactionAttributeSource">
		<bean class="org.springframework.transaction.annotation.AnnotationTransactionAttributeSource" />
	</property>	
</bean>

<bean id="feedReaderTarget" class="nz.co.searchwellington.feeds.FeedReader">
	<constructor-arg ref="resourceDAO" />
	<constructor-arg ref="feedDAO" />
	<constructor-arg ref="linkCheckerQueue" />
	<constructor-arg ref="autoTaggingService" />
	<constructor-arg ref="notifier" />
	<constructor-arg value="${feedreader.email}" />
	<constructor-arg ref="feedAcceptanceDecider" />
	<constructor-arg ref="dateFormatter" />
	<constructor-arg ref="urlCleaner" />
</bean>

<bean id="commentFeedReader" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
	<property name="transactionManager" ref="transactionManager" />
	<property name="target" ref="commentFeedReaderTarget" />
	<property name="transactionAttributeSource">
		<bean class="org.springframework.transaction.annotation.AnnotationTransactionAttributeSource" />
	</property>	
</bean>
<bean id="commentFeedReaderTarget" class="nz.co.searchwellington.feeds.CommentFeedReader">
	<constructor-arg ref="resourceDAO" />
	<constructor-arg ref="commentDAO" />
</bean>


<bean name="feedReaderJob" class="nz.co.searchwellington.jobs.FeedReaderJob">
	<constructor-arg ref="feedReader" />
	<constructor-arg ref="commentFeedReader" />
</bean>











<bean id="resourceDAO" class="nz.co.searchwellington.repositories.LuceneBackedResourceDAO">
 	<constructor-arg ref="sessionFactory" />
 	<constructor-arg value="${lucene.path}" />
</bean>

<bean id="snapshotDAO" class="nz.co.searchwellington.repositories.SnapshotDAO" >
	<constructor-arg ref="cacheManager" />
</bean>

<bean id="eventsDAO" class="nz.co.searchwellington.repositories.EventsDAO">
	<constructor-arg ref="resourceDAO" />
	<constructor-arg ref="calendarFeedDAO" />
</bean>




 
    
    <bean id="publisherSelectFactory"
    	class="nz.co.searchwellington.widgets.PublisherSelectFactory">
    	<constructor-arg ref="resourceDAO"/>	
    </bean>
    
     <bean id="tagWidgetFactory"
    	class="nz.co.searchwellington.widgets.TagWidgetFactory">
    	<constructor-arg ref="resourceDAO"/>	
    </bean>
    
       <bean id="acceptanceWidgetFactory" class="nz.co.searchwellington.widgets.AcceptanceWidgetFactory" />    		


 <bean id="velocityEngine" class="org.springframework.ui.velocity.VelocityEngineFactoryBean">
   <property name="resourceLoaderPath" value="/WEB-INF/velocity"/>
 </bean>

	<bean id="velocityConfig" class="org.springframework.web.servlet.view.velocity.VelocityConfigurer">
  		<property name="velocityProperties">
    <props>
      <prop key="output.encoding">UTF-8</prop>   
        <prop key="input.encoding">UTF-8</prop>   

       
    </props>
  </property>
  		<property name="resourceLoaderPath" value="/WEB-INF/velocity"/>
  </bean>
		
	<bean id="chartBuilder" class="nz.co.searchwellington.charts.ChartBuilder" />

	<bean id="contentDeduper" class="nz.co.searchwellington.controllers.ContentDedupingService" />

		
	<bean id="viewResolver" class="org.springframework.web.servlet.view.velocity.VelocityViewResolver">
  		<property name="cache" value="true"/>
  		<property name="prefix" value=""/>
  		<property name="suffix" value=".vm"/>  
  		<property name="contentType"><value>text/html;charset=UTF-8</value></property>
  		 <property name="toolboxConfigLocation" value="/WEB-INF/velocity/toolbox.xml"/>  		
  			<property name="attributesMap">
			<map>
				<entry key="dateFormatter" value-ref="dateFormatter" />
				<entry key="columnSplitter" value-ref="columnSplitter" />
				<entry key="site_information" value-ref="siteInformation" />
				<entry key="chartBuilder" value-ref="chartBuilder" />
				<entry key="urlBuilder" value-ref="urlBuilder" />
				<entry key="contentDeduper" value-ref="contentDeduper" />
			</map>
		</property>  		
	</bean>
	
	<bean id="urlBuilder" class="nz.co.searchwellington.controllers.UrlBuilder">
		<constructor-arg ref="siteInformation" />
	</bean>

	<bean id="siteInformation" class="nz.co.searchwellington.model.SiteInformation">
		<property name="areaname" value="${areaname}" />
		<property name="url" value="${installed}" />
		<property name="adsenseAccount" value="${adsence.account}" />
		<property name="twitterUsername" value="${twitter.username}" />
		<property name="googleMapsApiKey" value="${googlemaps.apikey}" />
	</bean>
	
	<bean id="dateFormatter" class="nz.co.searchwellington.dates.DateFormatter" />	
	<bean id="columnSplitter" class="nz.co.searchwellington.utils.ColumnSplitter" />	
	<bean id="googleMapsCleaner" class="nz.co.searchwellington.utils.GoogleMapsDisplayCleaner" />

	<bean id="geocodingService" class="nz.co.searchwellington.geocoding.GoogleGeoCodeService">
		<property name="apiKey" value="${googlemaps.apikey}" />
	</bean>


	<bean id="flickrDAO" class="nz.co.searchwellington.repositories.FlickrDAO">
		<property name="apiKey" value="${flickr.apikey}" />	
	</bean>
	
	<bean id="twitterService" class="nz.co.searchwellington.twitter.TwitterService">
		<property name="username" value="${twitter.username}" />
		<property name="password" value="${twitter.password}" />		
	</bean>
	
	<bean id="twitterNewsitemBuilderService" class="nz.co.searchwellington.twitter.TwitterNewsitemBuilderService">
		<constructor-arg ref="urlCleaner" />
	</bean>
	
	<bean id="tinyUrlResolverService" class="nz.co.searchwellington.twitter.TinyUrlResolverService" />
		
	<bean id="itemMaker" class="nz.co.searchwellington.controllers.ItemMaker">
		<constructor-arg ref="siteInformation" />
	</bean>
	
	<bean id="linkCheckerQueue" class="nz.co.searchwellington.model.LinkCheckerQueue" />
		
	<bean id="requestFilter" class="nz.co.searchwellington.filters.RequestFilter">
		<constructor-arg ref="resourceDAO" />
	</bean>
	
	
	
	
	<bean id="publisherGuessingService" class="nz.co.searchwellington.repositories.PublisherGuessingService">
		<constructor-arg ref="resourceDAO" />
	</bean>
	
	<bean id ="blogspotCommentFeedDetector" class="nz.co.searchwellington.commentfeeds.detectors.BlogspotCommentFeedDetector" />	
	<bean id ="textureCommentFeedDetector" class="nz.co.searchwellington.commentfeeds.detectors.TextureCommentFeedDetector" />
	<bean id ="wellingtonistaCommentFeedDetector" class="nz.co.searchwellington.commentfeeds.detectors.WellingtonistaCommentFeedDetector" />
		  	
	<bean id="commentFeedDetector" class="nz.co.searchwellington.commentfeeds.CommentFeedDetectorService">
		<constructor-arg>
			<list>
				<ref bean="blogspotCommentFeedDetector" />
				<ref bean="textureCommentFeedDetector" />
				<ref bean="wellingtonistaCommentFeedDetector" />
			</list>
		</constructor-arg>
	</bean>
	
	
	<bean id="linkCheckerTarget" class="nz.co.searchwellington.controllers.LinkChecker" >
		<constructor-arg ref="resourceDAO" />
		<constructor-arg ref="feedDAO" />
		<constructor-arg ref="commentFeedReader" />
		<constructor-arg ref="commentFeedDetector" />
		<constructor-arg ref="snapshotDAO" />	
		<constructor-arg ref="technoratiDAO" />
	</bean>
		
	
		
	<bean id="userDAO" class="nz.co.searchwellington.repositories.HibernateBackedUserDAO">
	 	<constructor-arg ref="sessionFactory" />
	</bean>
	
	
	<bean id="discoveredFeedRespository" class="nz.co.searchwellington.feeds.DiscoveredFeedRepository" >
		<constructor-arg ref="resourceDAO" />
		<constructor-arg ref="commentFeedDetector" />
	</bean>
	
	<bean id="configDAO" class="nz.co.searchwellington.repositories.ConfigDAO">
	 	<constructor-arg ref="sessionFactory" />
	</bean>
	
			
	<bean id="urlStack" class="nz.co.searchwellington.controllers.UrlStack">
	 	<constructor-arg ref="siteInformation" />
	</bean>
	
		
	<bean id="mailSender" class="nz.co.searchwellington.mail.MailSender">
		<constructor-arg value="${smtp.host}" />
		<constructor-arg value="${smtp.username}" />
		<constructor-arg value="${smtp.password}" />
		<constructor-arg value="notifications@wellington.gen.nz" />		
	</bean>
	
	<bean id="notifier" class="nz.co.searchwellington.mail.Notifier">
		<constructor-arg ref="mailSender" />
		<constructor-arg ref="velocityEngine" />
	</bean>
	
	<bean id="impliedTagService" class="nz.co.searchwellington.tagging.ImpliedTagService" />
	
	<bean id="placeAutoTagger" class="nz.co.searchwellington.tagging.PlaceAutoTagger">   
 		<constructor-arg ref="resourceDAO" /> 		
	</bean>
	
	<bean id="tagHintAutoTagger" class="nz.co.searchwellington.tagging.TagHintAutoTagger">   
 		<constructor-arg ref="resourceDAO" /> 		
	</bean>

	<bean id="autoTaggingService" class="nz.co.searchwellington.tagging.AutoTaggingService"> 
		<constructor-arg ref="impliedTagService" />
 		<constructor-arg ref="placeAutoTagger" />
 		<constructor-arg ref="tagHintAutoTagger" />
	</bean>
	
	<import resource="rssfeeds.xml" />
	
	<import resource="database.xml" />
	
	<bean id="feedDAO" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager" ref="transactionManager" />
		<property name="target" ref="feedDAOTarget" />
		<property name="transactionAttributeSource">
			<bean class="org.springframework.transaction.annotation.AnnotationTransactionAttributeSource" />
		</property>	
	</bean>
				
	
	<bean id="feedDAOTarget" class="nz.co.searchwellington.repositories.FeedDAO">
		<constructor-arg ref="urlCleaner" />
		<constructor-arg ref="rssFeedDAO" />
	</bean>
	
	
	
	<bean id="supressionDAO" class="nz.co.searchwellington.repositories.SupressionDAO">
			<constructor-arg ref="sessionFactory" />
	</bean>		
	
	
	<bean id="calendarFeedDAO" class="nz.co.searchwellington.repositories.CalendarFeedDAO" >
		<constructor-arg ref="calendarCache" />
	</bean>
	
	
	<bean id="commentDAO" class="nz.co.searchwellington.repositories.CommentDAO">
		<constructor-arg ref="rssHttpFetcher" />
	</bean>
	
	
	<bean id="sitemapService" class="nz.co.searchwellington.sitemap.GoogleSitemapService">
		<constructor-arg ref="resourceDAO" />
		<constructor-arg ref="dateFormatter" />	
	</bean>
	
	
	<bean id="technoratiDAO" class="nz.co.searchwellington.repositories.TechnoratiDAO">
		<constructor-arg value="${technorati.apikey}" />
	</bean>
	
		
	<bean id="httpFetcher" class="nz.co.searchwellington.utils.HttpFetcher" />
	
		
	<import resource="calendarfeeds.xml" />
	
		
</beans>
