<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.0.xsd">


	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location">
			<value>classpath:searchwellington.properties</value>
		</property>
	</bean>
	
	<import resource="database.xml" />
	<import resource="daos.xml" />	
	<import resource="database-backed-daos.xml" />	
	<import resource="daos.xml" />
		
	<import resource="rssfeeds.xml" />
	<import resource="commentfeeds.xml" />	
	<import resource="linkextractors.xml" />
	<import resource="urls.xml" />
	<import resource="linkchecking.xml" />
	<import resource="modelbuilders.xml"/>
	
	<import resource="timertasks.xml"/>
			
	<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"/>

	<bean class="org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor">
	  	<property name="transactionInterceptor" ref="txInterceptor"/>
	</bean>

	<bean id="txInterceptor" class="org.springframework.transaction.interceptor.TransactionInterceptor">
		<property name="transactionManager" ref="transactionManager"/>
	 	<property name="transactionAttributeSource">
   			<bean class="org.springframework.transaction.annotation.AnnotationTransactionAttributeSource"/>
  		</property>
	</bean>
	
	<bean id="twitterApiFactory" class="nz.co.searchwellington.twitter.TwitterApiFactory">
		<property name="consumerKey" value="${consumer.key}" />
		<property name="consumerSecret" value="${consumer.secret}" />
		<property name="accessToken" value="${access.token}" />
		<property name="accessSecret" value="${access.secret}" />				
	</bean>
	
	<bean id="twitterSigninHandler" class="nz.co.searchwellington.signin.twitter.TwitterLoginHandler">
		<constructor-arg ref="userDAO" />
		<constructor-arg ref="twitterApiFactory" />
		<constructor-arg ref="urlBuilder" />
		<property name="consumerKey" value="${consumer.key}" />
		<property name="consumerSecret" value="${consumer.secret}" />
	</bean>
	
	<bean id="requestObjectLoaderFilter" class="nz.co.searchwellington.filters.RequestObjectLoadingFilter" >	
		<constructor-arg ref="requestFilter" />
		<constructor-arg ref="loggedInUserFilter" />	
	</bean>

	<bean id="flickrApi" class="nz.co.searchwellington.flickr.FlickrApi">
		<property name="apiKey" value="${flickr.apikey}" />
		<property name="apiSecret" value="${flickr.apisecret}" />				
	</bean>
	
	<bean id="flickrService" class="nz.co.searchwellington.flickr.FlickrService">
		<constructor-arg ref="flickrApi" />
		<constructor-arg ref="configDAO" />
		<constructor-arg ref="memcachedCache" />
	</bean>
	
	<bean id="anonUserService" class="nz.co.searchwellington.controllers.AnonUserService">
		<constructor-arg ref="userDAO" />
	</bean>
	
	<bean id="rssItemMaker" class="nz.co.searchwellington.views.RssItemMaker" />
		
	<bean id="loginResourceOwnershipService" class="nz.co.searchwellington.controllers.LoginResourceOwnershipService">
		<constructor-arg ref="resourceDAO" />
		<constructor-arg ref="userDAO" />
		<constructor-arg ref="handTaggingService" />
	</bean>

	<bean id="taggingReturnsOfficerService" class=" nz.co.searchwellington.tagging.TaggingReturnsOfficerService" >
		<constructor-arg ref="handTaggingDAO" />
	</bean>
	
	<bean id="keystore" class="nz.co.searchwellington.repositories.keystore.KeyStore">
		<property name="hostname" value="${keystore.hostname}" />
		<property name="port" value="${keystore.port}" />
	</bean>

	<bean id="loggedInUserFilter" class="nz.co.searchwellington.controllers.LoggedInUserFilter" scope="request">
		<aop:scoped-proxy/>
		<constructor-arg ref="userDAO" />
	</bean>
					
	<bean id="editPermissionService" class="nz.co.searchwellington.controllers.admin.EditPermissionService" >
		<constructor-arg ref="loggedInUserFilter" />
	</bean>
	
	<bean id="feedAcceptanceDecider" class="nz.co.searchwellington.feeds.FeedAcceptanceDecider">
		<constructor-arg ref="resourceDAO" />	
		<constructor-arg ref="supressionDAO" />
		<constructor-arg ref="urlCleaner" />
		<constructor-arg ref="suggestionDAO" />
	</bean>

	<bean id="handTaggingService" class="nz.co.searchwellington.repositories.HandTaggingService">
		<constructor-arg ref="handTaggingDAO" />
		<constructor-arg ref="frontendContentUpdater" />
	</bean>

	<bean id="tagModificationService" class="nz.co.searchwellington.modification.TagModificationService">
		<constructor-arg ref="tagDAO" />	
		<constructor-arg ref="handTaggingService" />	
	</bean>
	
	<bean id="feedItemAcceptor" class="nz.co.searchwellington.feeds.FeedItemAcceptor" />
		
	<bean id="commentFeedReader" class="nz.co.searchwellington.feeds.CommentFeedReader">
		<constructor-arg ref="resourceDAO" />
		<constructor-arg ref="commentFeedService" />
		<constructor-arg ref="contentUpdateService" />
		<constructor-arg ref="configDAO" />		
	</bean>

	<bean name="commentFeedReaderJob" class="nz.co.searchwellington.jobs.CommentFeedReaderJob">
		<constructor-arg ref="commentFeedReader" />
	</bean>

     <bean id="tagWidgetFactory" class="nz.co.searchwellington.widgets.TagWidgetFactory">
     	<constructor-arg ref="tagDAO" />
    	<constructor-arg ref="resourceDAO" />	
    </bean>
    
  	<bean id="acceptanceWidgetFactory" class="nz.co.searchwellington.widgets.AcceptanceWidgetFactory" />    		

	<bean id="snapshotBodyExtractor" class="nz.co.searchwellington.htmlparsing.SnapshotBodyExtractor" >
		<constructor-arg ref="snapshotDAO" />
	</bean>
	
	
	
		
	<bean id="chartBuilder" class="nz.co.searchwellington.charts.ChartBuilder" />



	<bean id="publisherNewsitemCountService" class="nz.co.searchwellington.controllers.PublisherNewsitemCountService" scope="request">
		<aop:scoped-proxy/>
		<constructor-arg ref="loggedInUserFilter" />
		<constructor-arg ref="solrQueryService" />
	</bean>
				
	<bean id="velocityEngine" class="org.springframework.ui.velocity.VelocityEngineFactoryBean">
   		<property name="resourceLoaderPath" value="/WEB-INF/velocity"/>
	 </bean>
	
	<bean id="velocityConfig" class="org.springframework.web.servlet.view.velocity.VelocityConfigurer">
  		<property name="velocityProperties">
    		<props>
     			<prop key="output.encoding">UTF-8</prop>   
        		<prop key="input.encoding">UTF-8</prop>      
	    	</props>
	  	</property>
  		<property name="resourceLoaderPath" value="/WEB-INF/velocity"/>
	</bean>
	
	<bean id="viewResolver" class="org.springframework.web.servlet.view.velocity.VelocityViewResolver">
  		<property name="cache" value="true"/>
  		<property name="prefix" value=""/>
  		<property name="suffix" value=".vm"/>  
  		<property name="contentType"><value>text/html;charset=UTF-8</value></property>
  		 <property name="toolboxConfigLocation" value="/WEB-INF/velocity/toolbox.xml"/>  		
  			<property name="attributesMap">
			<map>
				<entry key="site_information" value-ref="siteInformation" />				
				<entry key="dateFormatter" value-ref="dateFormatter" />
				<entry key="columnSplitter" value-ref="columnSplitter" />
				<entry key="chartBuilder" value-ref="chartBuilder" />
				<entry key="urlBuilder" value-ref="urlBuilder" />
				<entry key="rssUrlBuilder" value-ref="rssUrlBuilder" />				
				<entry key="adminUrlBuilder" value-ref="adminUrlBuilder" />
				<entry key="contentDeduper" value-ref="contentDeduper" />
				<entry key="editPermissionService" value-ref="editPermissionService" />
				<entry key="loggedInUserFilter" value-ref="loggedInUserFilter" />
				<entry key="publisherNewsitemCountService"  value-ref="publisherNewsitemCountService" />
				<entry key="googleMapCleaner" value-ref="googleMapsCleaner" />
			</map>
		</property> 
	</bean>
	
	<bean id="memcachedCache" class="nz.co.searchwellington.caching.MemcachedCache">
		<property name="memcachedUrls" value="${memcached.urls}"/>
	</bean>
			
	<bean id="urlBuilder" class="nz.co.searchwellington.urls.UrlBuilder">
		<constructor-arg ref="siteInformation" />
		<constructor-arg ref="cachingTwitterService" />
		<constructor-arg ref="dateFormatter" />
	</bean>	
	
	<bean id="adminUrlBuilder" class="nz.co.searchwellington.controllers.admin.AdminUrlBuilder">
		<constructor-arg ref="siteInformation" />
		<constructor-arg ref="urlBuilder" />		
	</bean>	
	<bean id="rssUrlBuilder" class="nz.co.searchwellington.controllers.RssUrlBuilder">
		<constructor-arg ref="siteInformation" />
	</bean>
	
	<bean id="showBrokenDecisionService" class="nz.co.searchwellington.controllers.ShowBrokenDecisionService">
		<constructor-arg ref="loggedInUserFilter" />
	</bean>
			
	<bean id="keywordSearchService"  class="nz.co.searchwellington.repositories.solr.KeywordSearchService">
		<constructor-arg ref="solrKeywordQueryBuilder" />
		<constructor-arg ref="solrResourceDAO" />
	</bean>
			
	<bean id="contentRetrievalService" class="nz.co.searchwellington.repositories.ContentRetrievalService">
		<constructor-arg ref="resourceDAO" />
		<constructor-arg ref="keywordSearchService" />
		<constructor-arg ref="showBrokenDecisionService" />
		<constructor-arg ref="tagDAO" />
		<constructor-arg ref="relatedTagsService" />
		<constructor-arg ref="discoveredFeedRespository" />
		<constructor-arg ref="solrResourceDAO" />		
	</bean>
		
	<bean id="siteInformation" class="nz.co.searchwellington.model.SiteInformation">
		<constructor-arg ref="configDAO" />
		<property name="areaname" value="${areaname}" />
		<property name="url" value="${installed}" />
		<property name="adsenseAccount" value="${adsence.account}" />
		<property name="twitterUsername" value="${twitter.username}" />
		<property name="googleMapsApiKey" value="${googlemaps.apikey}" />
		<property name="staticRoot" value="${staticroot}" />
		<property name="imageRoot" value="${imageroot}" />
		<property name="feedburnerUrl" value="${feedburner.url}" />
	</bean>
	
	<bean id="dateFormatter" class="nz.co.searchwellington.dates.DateFormatter" />	
	<bean id="columnSplitter" class="nz.co.searchwellington.utils.ColumnSplitter" />	
	<bean id="googleMapsCleaner" class="nz.co.searchwellington.views.GoogleMapsDisplayCleaner" />
			
	<bean id="googleGeocodingService" class="nz.co.searchwellington.geocoding.GoogleGeoCodeService" />
	<bean id="nominatimGeocodingService" class="nz.co.searchwellington.geocoding.NominatimGeocodingService" />
	
	<bean id="compositeGeocodingService" class="nz.co.searchwellington.geocoding.CompositeGeocodeService">
	<constructor-arg>
		<list>
			<ref bean="nominatimGeocodingService" />
			<ref bean="googleGeocodingService" />				
		</list>
	</constructor-arg>
	</bean>
			
	<bean id="geocodingService" class="nz.co.searchwellington.geocoding.CachingGeocodeService">
		<constructor-arg ref="compositeGeocodingService" />
		<constructor-arg ref="memcachedCache" />
	</bean>
		
	<bean id="contentDeduper" class="nz.co.searchwellington.views.ContentDedupingService" />
	
	<bean id="cachingTwitterService" class="nz.co.searchwellington.twitter.CachingTwitterService">
		<constructor-arg ref="twitterService" />
		<constructor-arg ref="memcachedCache" />
		<property name="twitterUsername" value="${twitter.username}" />
	</bean>
	
	<bean id="twitterService" class="nz.co.searchwellington.twitter.LiveTwitterService">
		<constructor-arg ref="twitterApiFactory" />
	</bean>
	
	<bean id="twitterMentionFinder" class="nz.co.searchwellington.twitter.TwitterNewsitemMentionsFinderService">
		<constructor-arg ref="urlCleaner" />
		<constructor-arg ref="resourceDAO" />
		<constructor-arg ref="cachingTwitterService" />
		<constructor-arg ref="tweetDAO" />		
	</bean>
		
	<bean id="linkCheckerQueue" class="nz.co.searchwellington.model.LinkCheckerQueue" />
	
	<bean id="googleSearchTermExtractor" class="nz.co.searchwellington.filters.GoogleSearchTermExtractor" />
				
	<bean id="requestFilter" class="nz.co.searchwellington.filters.RequestFilter" scope="request">
		<constructor-arg ref="resourceDAO" />
		<constructor-arg ref="tagDAO" />
		<constructor-arg>
			<list>
				<bean class="nz.co.searchwellington.filters.GoogleSearchTermFilter">
					<constructor-arg ref="googleSearchTermExtractor" />
				</bean>
				<bean class="nz.co.searchwellington.filters.PageParameterFilter" />
				<bean class="nz.co.searchwellington.filters.TagsParameterFilter">
					<constructor-arg ref="tagDAO" />
				</bean>
				<bean class="nz.co.searchwellington.filters.ResourceParameterFilter">
					<constructor-arg ref="resourceDAO" />
				</bean>
				<bean class="nz.co.searchwellington.filters.TagParameterFilter">
					<constructor-arg ref="tagDAO" />
				</bean>
				<bean class="nz.co.searchwellington.filters.PublisherParameterFilter">
					<constructor-arg ref="resourceDAO" />
				</bean>
				<bean class="nz.co.searchwellington.filters.LocationParameterFilter">
					<constructor-arg ref="geocodingService" />
				</bean>				
			</list>
		</constructor-arg>
		<aop:scoped-proxy/>
	</bean>
		
	<bean id="adminRequestFilter" class="nz.co.searchwellington.controllers.admin.AdminRequestFilter">
		<constructor-arg ref="resourceDAO" />
		<constructor-arg ref="tagDAO" />
	</bean>
		
	<bean id="publisherGuessingService" class="nz.co.searchwellington.repositories.PublisherGuessingService">
		<constructor-arg ref="resourceDAO" />
	</bean>
	
	<bean id="discoveredFeedRespository" class="nz.co.searchwellington.feeds.DiscoveredFeedRepository" >
		<constructor-arg ref="resourceDAO" />
		<constructor-arg ref="commentFeedDetector" />
	</bean>
					
	<bean id="urlStack" class="nz.co.searchwellington.controllers.UrlStack">
	 	<constructor-arg ref="urlBuilder" />
	</bean>
			
	<bean id="mailSender" class="nz.co.searchwellington.mail.MailSender">
		<constructor-arg value="${smtp.host}" />
		<constructor-arg value="${smtp.username}" />
		<constructor-arg value="${smtp.password}" />
		<constructor-arg value="notifications@wellington.gen.nz" />		
	</bean>
	
	<bean id="notifier" class="nz.co.searchwellington.mail.Notifier">
		<constructor-arg ref="mailSender" />
		<constructor-arg ref="velocityEngine" />		
		<property name="recipient" value="${feedreader.email}" />	
	</bean>
		
	<bean id="impliedTagService" class="nz.co.searchwellington.tagging.ImpliedTagService">
		<constructor-arg ref="taggingReturnsOfficerService" />
	</bean>
	
	<bean id="placeAutoTagger" class="nz.co.searchwellington.tagging.PlaceAutoTagger">   
 		<constructor-arg ref="tagDAO" /> 		
	</bean>	
	<bean id="tagHintAutoTagger" class="nz.co.searchwellington.tagging.TagHintAutoTagger">   
 		<constructor-arg ref="tagDAO" /> 		
	</bean>
	
	<bean id="autoTaggingService" class="nz.co.searchwellington.tagging.AutoTaggingService"> 
 		<constructor-arg ref="placeAutoTagger" />
 		<constructor-arg ref="tagHintAutoTagger" />
 		<constructor-arg ref="handTaggingDAO" />
 		<constructor-arg ref="userDAO" /> 		
	</bean>
			
	<bean id="commentFeedService" class="nz.co.searchwellington.feeds.CommentFeedService">
		<constructor-arg ref="rssHttpFetcher" />
	</bean>
	
	
	<bean id="sitemapService" class="nz.co.searchwellington.sitemap.GoogleSitemapService">
		<constructor-arg ref="contentRetrievalService" />
		<constructor-arg ref="dateFormatter" />
		<constructor-arg ref="urlBuilder" />
		<constructor-arg ref="tagDAO" />
	</bean>
	
	<bean id="robotExclusionService" class="nz.co.searchwellington.utils.RobotExclusionService" >
		<constructor-arg ref="standardHttpFetcher" />
	</bean>
		
	<bean id="standardHttpFetcher" class="nz.co.searchwellington.utils.StandardHttpFetcher" >
		<property name="userAgent" value="${http.useragent}" />
		<property name="httpProxyHostname" value="${http.proxy.hostname}" />
		<property name="httpProxyPort" value="${http.proxy.port}" />
	</bean>
	
	<bean id="httpFetcher" class="nz.co.searchwellington.utils.RobotsAwareHttpFetcher">
		<constructor-arg ref="robotExclusionService" />
		<constructor-arg ref="standardHttpFetcher" />
		<constructor-arg>
			<list>
				<value>http://www.allsaints.org.nz/</value>
				<value>http://www.visitzealandia.com/</value>
				<value>http://www.wellingtonphoenix.com/</value>
				<value>http://www.huttcity.com/</value>
				<value>http://www.metlink.org.nz/</value>
				<value>http://us1.campaign-archive.com</value>
			</list>
		</constructor-arg>
	</bean>
	
	<bean id="solrUpdateQueue" class="nz.co.searchwellington.repositories.solr.SolrUpdateQueue" />

	<bean id="frontendContentUpdater" class="nz.co.searchwellington.repositories.FrontendContentUpdater">
		<constructor-arg ref="solrUpdateQueue" />
		<constructor-arg ref="solrInputDocumentBuilder" />			
	</bean>
			
	<bean id="contentUpdateService"  class="nz.co.searchwellington.modification.ContentUpdateService">
		<constructor-arg ref="resourceDAO" />
		<constructor-arg ref="suggestionDAO" />	
		<constructor-arg ref="linkCheckerQueue" />
		<constructor-arg ref="frontendContentUpdater" />
	</bean>
			
	<bean id="suppressionService" class="nz.co.searchwellington.repositories.SupressionService">
		<constructor-arg ref="supressionDAO" />
		<constructor-arg ref="suggestionDAO" />		
	</bean>
	
	
	<bean id="contentDeletionService" class="nz.co.searchwellington.modification.ContentDeletionService">
		<constructor-arg ref="suppressionService" />
		<constructor-arg ref="cachingRssfeedNewsitemService" />
		<constructor-arg ref="resourceDAO" />
		<constructor-arg ref="snapshotDAO" />
		<constructor-arg ref="solrQueryService" />
		<constructor-arg ref="handTaggingDAO" />		
		<constructor-arg ref="tagDAO" />
	</bean>
	
	<bean id="availableSuggestedFeeditemsService" class="nz.co.searchwellington.repositories.AvailableSuggestedFeeditemsService">
		<constructor-arg ref="cachingRssfeedNewsitemService" />
	</bean>
			
	<bean id="suggestedFeeditemsService" class="nz.co.searchwellington.repositories.SuggestedFeeditemsService">
		<constructor-arg ref="suggestionDAO" />
		<constructor-arg ref="availableSuggestedFeeditemsService" />
		<constructor-arg ref="cachingRssfeedNewsitemService" />
	</bean>
			
</beans>
