<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.0.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">
        
	<context:annotation-config />
	<context:component-scan base-package="nz.gen.wellington,nz.co.searchwellington,uk.co.eelpieconsulting.common" />
	
	<mvc:annotation-driven />
	<mvc:default-servlet-handler />
   
	<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"/>

	<bean class="org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor">
	  	<property name="transactionInterceptor" ref="txInterceptor"/>
	</bean>

	<bean id="txInterceptor" class="org.springframework.transaction.interceptor.TransactionInterceptor">
		<property name="transactionManager" ref="transactionManager"/>
	 	<property name="transactionAttributeSource">
   			<bean class="org.springframework.transaction.annotation.AnnotationTransactionAttributeSource"/>
  		</property>
	</bean>
	
	<bean id="velocityConfig" class="org.springframework.web.servlet.view.velocity.VelocityConfigurer">
  		<property name="velocityProperties">
    		<props>
     			<prop key="output.encoding">UTF-8</prop>   
        		<prop key="input.encoding">UTF-8</prop>      
	    	</props>
	  	</property>
  		<property name="resourceLoaderPath" value="/WEB-INF/velocity"/>
	</bean>
	
	<bean id="viewResolver" class="org.springframework.web.servlet.view.velocity.VelocityViewResolver">
		<property name="cache" value="true" />
		<property name="prefix" value="" />
		<property name="suffix" value=".vm" />
		<property name="contentType">
			<value>text/html;charset=UTF-8</value>
		</property>
		<property name="toolboxConfigLocation" value="/WEB-INF/velocity/toolbox.xml" />
		<property name="attributesMap">
			<map>
				<entry key="site_information" value-ref="siteInformation" />
				<entry key="dateFormatter" value-ref="dateFormatter" />
				<entry key="columnSplitter" value-ref="columnSplitter" />
				<entry key="urlBuilder" value-ref="urlBuilder" />
				<entry key="rssUrlBuilder" value-ref="rssUrlBuilder" />
				<entry key="adminUrlBuilder" value-ref="adminUrlBuilder" />
				<entry key="contentDeduper" value-ref="contentDedupingService" />
				<entry key="editPermissionService" value-ref="editPermissionService" />
				<entry key="loggedInUserFilter" value-ref="loggedInUserFilter" />
				<entry key="publisherNewsitemCountService" value-ref="publisherNewsitemCountService" />
				<entry key="googleMapCleaner" value-ref="googleMapsDisplayCleaner" />				
			</map>
		</property>
	</bean>

	<bean id="commentReaderJobRun" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="commentFeedReaderJob" />
		<property name="targetMethod" value="runComments" />
		<property name="concurrent" value="false" />
	</bean>
	<bean id="commentReaderTrigger" class="org.springframework.scheduling.quartz.SimpleTriggerBean">
		<property name="jobDetail" ref="commentReaderJobRun" />
		<property name="startDelay" value="3600000" />
		<property name="repeatInterval" value="3600000" />
	</bean>

	<bean id="solrUpdateJobRun" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="solrUpdateJob" />
		<property name="targetMethod" value="run" />
		<property name="concurrent" value="false" />
	</bean>
	<bean id="solrUpdateTrigger" class="org.springframework.scheduling.quartz.SimpleTriggerBean">
		<property name="jobDetail" ref="solrUpdateJobRun" />
		<property name="startDelay" value="60000" />
		<property name="repeatInterval" value="60000" />
	</bean>

	<bean id="linkCheckerJobRun" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="linkCheckerJob" />
		<property name="targetMethod" value="run" />
		<property name="concurrent" value="false" />
	</bean>
	<bean id="linkCheckerTrigger" class="org.springframework.scheduling.quartz.SimpleTriggerBean">
		<property name="jobDetail" ref="linkCheckerJobRun" />
		<property name="startDelay" value="600000" />
		<property name="repeatInterval" value="60000" />
	</bean>
	<bean name="linkCheckerScheduler" class="nz.co.searchwellington.jobs.LinkCheckerScheduler">
		<constructor-arg ref="hibernateResourceDAO" />
		<constructor-arg ref="linkCheckerQueue" />
	</bean>

	<bean id="twitterListenerJobRun" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="twitterListenerJob" />
		<property name="targetMethod" value="run" />
		<property name="concurrent" value="false" />
	</bean>
	<bean id="twitterListenerJobTrigger" class="org.springframework.scheduling.quartz.SimpleTriggerBean">
		<property name="jobDetail" ref="twitterListenerJobRun" />
		<property name="startDelay" value="600000" />
		<property name="repeatInterval" value="3600000" />
	</bean>
	<bean id="watchlistCheckerSchedulerRun" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="linkCheckerScheduler" />
		<property name="targetMethod" value="queueWatchlistItems" />
		<property name="concurrent" value="false" />
	</bean>

	<bean id="watchlistCheckerSchedulerTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail" ref="watchlistCheckerSchedulerRun" />
		<property name="cronExpression" value="0 0 6 * * ?" />
	</bean>

	<bean id="feedCheckerSchedulerRun"
		class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="linkCheckerScheduler" />
		<property name="targetMethod" value="queueFeeds" />
		<property name="concurrent" value="false" />
	</bean>
	<bean id="feedCheckerSchedulerTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail" ref="feedCheckerSchedulerRun" />
		<property name="cronExpression" value="0 0 6,18 * * ?" />
	</bean>
	
	<bean id="expiredCheckerSchedulerRun"
		class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="linkCheckerScheduler" />
		<property name="targetMethod" value="queueExpiredItems" />
		<property name="concurrent" value="false" />
	</bean>
	<bean id="expiredCheckerSchedulerTrigger" class="org.springframework.scheduling.quartz.SimpleTriggerBean">
		<property name="jobDetail" ref="expiredCheckerSchedulerRun" />
		<property name="startDelay" value="3600000" />
		<property name="repeatInterval" value="60000" />
	</bean>
	
	<bean id="rssPrefetcherRun" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="rssNewsitemPrefetcher" />
		<property name="targetMethod" value="run" />
		<property name="concurrent" value="false" />
	</bean>

	<bean id="rssPrefetcherTrigger" class="org.springframework.scheduling.quartz.SimpleTriggerBean">
		<property name="jobDetail" ref="rssPrefetcherRun" />
		<property name="startDelay" value="600000" />
		<property name="repeatInterval" value="7200000" />
	</bean>

	<bean id="twitterListenerJob" class="nz.co.searchwellington.jobs.TwitterListenerJob">
		<constructor-arg ref="cachingTwitterService" />
		<constructor-arg ref="twitterNewsitemMentionsFinderService" />
		<constructor-arg ref="configDAO" />
		<constructor-arg ref="contentUpdateService" />
	</bean>

	<bean name="linkCheckerJob" class="nz.co.searchwellington.jobs.LinkCheckerJob">
		<constructor-arg ref="linkCheckerQueue" />
		<constructor-arg ref="linkChecker" />
	</bean>

	<bean name="solrUpdateJob" class="nz.co.searchwellington.jobs.SolrUpdateJob">
		<constructor-arg ref="solrUpdateQueue" />
		<constructor-arg ref="solrQueryService" />
	</bean>

	<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				<ref bean="linkCheckerTrigger" />
				<ref bean="solrUpdateTrigger" />
				<ref bean="commentReaderTrigger" />
				<ref bean="feedCheckerSchedulerTrigger" />
				<ref bean="watchlistCheckerSchedulerTrigger" />
				<ref bean="expiredCheckerSchedulerTrigger" />
				<ref bean="twitterListenerJobTrigger" />
				<ref bean="rssPrefetcherTrigger" />
			</list>
		</property>
	</bean>			  
		    
</beans>