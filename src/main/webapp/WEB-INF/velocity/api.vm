#parse("includes/header.vm")

<div class="page">
	#parse("includes/topbar.vm")

	<div class="left">
		#parse("includes/tag_tree.vm")
	</div>


	<div class="main">
		<h2>$heading</h2>

		
		<ul>
			<li class="tagged"><a href="#gettingstarted">Getting started</a> | </li>
			<li class="tagged"><a href="#newsitemqueries">Newsitem queries</a> | </li>
			<li class="tagged"><a href="#rsstojson">RSS to JSON mirroring</a> | </li>
			<li class="tagged"><a href="#contact">Contact</a></li>
		</ul>	

		<center>
			<img src="$urlBuilder.getImageUrl('wordel.png')" width="520" border="0" vspace="0">
		</center>
		<br />
		
		<span class="wordlecredit">Word cloud by <a href="http://www.wordle.net/">Wordle</a></span>
		<br/>
		<p>A number of large news organisations have begun providing <a href="http://www.guardian.co.uk/open-platform">APIs to their content</a>. 
		These services allow content to be queried programmatically for use in mash ups and the like.</p>

		<p>The Wellynews API lets you do something simular with the local newsitems indexed by Search Wellington.</p>

		<p>For example, the API can provide a feed of local newsitems related to <a href="$site_information.url/consultation/rss">consultation</a>; 
		or maybe <a href="$site_information.url/zebras/rss">zebras</a>. It can also handle potentially interesting combinations,
		such as <a href="$site_information.url/wellington-city-council+indoorsportscentre/rss">what Wellington City Council has said about the Indoor Sports Centre</a> or
		<a href="$site_information.url/sculpture+waterfront/rss">sculpture on the waterfront</a>.
		</p>

	
		<a name="gettingstarted"></a>
		<h2>Getting started</h2>
	
		<h5>Supported Formats</h5>

		<p>The API allows newsitems to be extracted in RSS or JSON (Javascript) formats. RSS is widely supported by feed readers, 
		web browsers and server side libraries. JSON is typically used for passing data into browser based Javascript applications and mashups.</p>

		<p>The desired format is specified by appending ethier <code>rss</code> or <code>json</code>
		to the end of the query url.</p>

		<p>ie. Transport newsitems in RSS format:</p>

		<ul>
			<li><code><a href="$site_information.url/transport/rss">$site_information.url/transport/rss</a></code></li>
		</ul>

		<p>or the same newsitems in JSON format:</p>
		
		<ul>
			<li><code><a href="$site_information.url/transport/json">$site_information.url/transport/json</a></code></li>
		</ul>


		<h5>Specifying tags and publishers</h5>

		<p>When querying for newsitems (below) you have the option of filtering by tag or publisher. 
		Tags and publishers are specified by substituting the appropriate url snippet into your request.</p>

		<p>ie. The url snippet for Wellington City Council is <code>wellington-city-council</code>.</p>

		<p>A complete list of available tag and publisher url snippets is provided <a href="#urlsnippets">below</a>.</p>


		<a name="newsitemqueries"></a>
		<h2>Newsitem queries</h2>

		<p>The following types of newsitem query are supported.</p>

		<h5><b>Tag newitems</b></h5>

		<p>Returns newsitems tagged with a given tag.</p>
	
		<ul>
			<li><code>$site_information.url/[tag url snippet]/[rss|json]</code>
		</ul>

		<p>ie. All newsitems tagged with soccer, in RSS format.</p>

		<ul>
			<li><code><a href="$site_information.url/soccer/rss">$site_information.url/soccer/rss</a></code></li>
		</ul>


		<h5><b>Publisher newsitems</b></h5>

		<p>Returns newsitems published by a specific publisher.</p>

		<ul>
			<li><code>$site_information.url/[publisher url snippet]/[rss|json]</code>
		</ul>

		<p>ie. newsitems published by the Capital Times, in JSON format.</p>

		<ul>
			<li><code><a href="$site_information.url/capital-times/json">$site_information.url/capital-times/json</a></code></li>
		</ul>



		<h5><b>Combinations</b></h5>

		<p>Returns newsitems tagged with a combination of two tags, or a publisher and a tag.</p>
		<p> The tags are seperated with a plus character. For combinations involving a publisher, the publisher must always appear on the left hand side of the plus.</p> 

		<ul>
			<li><code>$site_information.url/[tag|publisher]+[tag]/[rss|json]</code>
		</ul>

		<p>ie. newsitems tagged with transport and consultation and Wellington City Council media releases tagged with indoor sports centre</a>.</p>

		<ul>
			<li><code><a href="$site_information.url/transport+consultation/rss">$site_information.url/transport+consultation/rss</a></code></li>
			<li><code><a href="$site_information.url/wellington-city-council+indoorsportscentre/rss">$site_information.url/wellington-city-council+indoorsportscentre/rss</a></code></li>
		</ul>

		<p>Credit: The combination url scheme was inspired by the Guardian newspapers' tag combiners.</p>



		<h5><b>Commented newsitems</b></h5>
		
		<p>Returns newsitems which have been commented on.</p>
		<ul>
			<li><code>$site_information.url/comment/[rss/json]</code></li>
		</ul>

		<p>ie. Commented newsitesm in JSON format.</p>

		<ul>
			<li><code><a href="$site_information.url/comment/json">$site_information.url/waterfront/comment/json</a></code></li>
		</ul>

		<p>Commented newsitems also specifiy the newsitems'comment feed url on the <code>commentFeed</code> field on the JSON results.</p>




		<h5><b>Commented newsitems for a tag</b></h5>

		<p>Returns commented newsitems for a given tag.</p>	
		<ul>
			<li><code>$site_information.url/[tag url snippet]/comment/[rss|json]</code>
		</ul>

		<p>ie. Commented newsitems tagged with waterfront in JSON format.</p>
		<ul>
			<li><code><a href="$site_information.url/waterfront/comment/json">$site_information.url/waterfront/comment/json</a></code></li>
		</ul>



		<h5><b>Geotagged newsitems</b></h5>
		
		<p>Returns newsitems which have been geotagged.</p>
		<ul>
			<li><code>$site_information.url/geotagged/[rss|json]</code></li>
		</ul>

		<p>ie. Geotagged newsitems in RSS format.</p>
		<ul>
			<li><code><a href="$site_information.url/geotagged/rss">$site_information.url/geotagged/rss</a></code></li>
		</ul>



		<h5><b>Pagination</b></h5>

		<p>Each RSS or JSON call returns a maximum of 30 results. 
		For JSON calls, additional results can be obtained from using the <code>page</code> parameter to paginate through the results.</p>

		<p>ie. page 6 of the Victoria University newsitems:</p>

		<ul>
			<li><code><a href="$site_information.url/victoria-university-of-wellington/json?page=6">$site_information.url/victoria-university-of-wellington/json?page=6</a></code></li>
		</ul>

		<p>You can see the total number of available results in the <code>totalItems</code> field of the JSON results. The <code>showingFrom</code>
		 and <code>showingTo</code> fields tell you which resuls you are currently viewing:</p>

<pre>
<code>
{
  "totalItems": 377,
  "showingFrom": 151,
  "showingTo": 180,
  "newsitems": [ ... ]
}
</code>
</pre>



		<h5><b>JSONP callbacks</b></h5>

		<p>You can specify that JSON results should be wrapped in a JSONP style callback, using the optional <code>callback</code>
		parameter. This is approch is required when making cross domain JSON calls from a web brower.</p>

		<p>ie.</p>
		<ul>
			<li><code><a href="$site_information.url/zebras/json?callback=mycallbackfunction">$site_information.url/zebras/json?callback=mycallbackfunction</a></code></li>
		</ul>

		<p>Your callback function name may contain letters, numbers and underscores only.</p>


		<a name="rsstojson"></a>	
		<h2>RSS to JSON feed mirroring</h2>

		<p>Provides JSON copies of local RSS feeds. This makes it easier to integrate feeds into sites using Javascript.</p>

		<ul>
			<li><code>$site_information.url/feed/[feed url snippet]/json</code><br/>
			Where the feed url snippet matches one of the feeds listed below.</li>
		</ul>

		<p>ie. Wellington City Councils' latest news feed as a JSON list:</p>

		<ul>
			<li><code><a href="$site_information.url/feed/wellington-city-council-latest-news/json">$site_information.url/feed/wellington-city-council-latest-news/json</a></code></li>
		</ul>
	
		<p>A complete list of feed url snippets is provided <a href="#feedurlsnippets">below</a>.</p>




		<a name="urlsnippets"></a>
		<h2>URL snippets</h2>

		<h5><b>Available Tags</b></h5>
		<table>
			<tr><td>Tag</td><td>URL snippet</td></tr>
			#foreach($item in $api_tags)
				<tr><td>$item.displayName</td>
				<td><code>$item.name</code></td></tr>
			#end
		</table>


		<h5><b>Available Publishers</b></h5>
		<table>
			<tr><td>Publisher</td><td>URL snippet</td></tr>
			#foreach($publisher in $publishers)
				<tr><td>$publisher.name</td>
				<td><code>$publisher.urlWords</code></td></tr>
			#end
		</table>	



		<a name="feedurlsnippets"></a>
		<h5><b>Available RSS to JSON Feeds</b></h5>
		<table>
			<tr><td>Feed</td><td>URL snippet</td></tr>
			#foreach($item in $feeds)
				<tr><td>$item.name</td>
				<td><code>$item.urlWords</code></td></tr>
			#end
		</table>


	</div>

	<div class="right">
		
		<div class="box">
			<h2>Usage Example</h2>
			<p>Example: Using JSON and Javascript to pull the latest transport newsitems into a page.</p>			
		
			<div class="apiexample">
				#include("widget.vm")
			</div>
					
			<h5>Source code</h5>
			
			<p>The Javascript source code for the above example is available below.</p>
			
			<iframe src="http://im.wellington.gen.nz/static/example.txt" width="250" height="280" frameborder="0"></iframe>
						
			
			<p>This example was implemented using the <a href="http://jquery.com/">JQuery Javascript library</a>. Any other JSON library could be used. 
			
			<p>Following, is a line by line breakdown of what the example is doing:</p>
				
			<p>Lines 1-2: HTML for the Transport heading and an emptry div tag which JQuery will write the newsitems into.</p>
			<p>Line 4: Sourcing in the JQuery library file; you would normally do the in the head tag.</p>
			<p>Lines 6-8: JQuery. Once the page has finished loading and is ready, fetch JSON data from the API and pass it to the function renderNewsitems.</p>
			<p>Lines 10-16: JQuery. The renderNewsitems function is using JQuery to write out the first 4 items from the JSON data as HTML into the empty newsitems div.</p>
		</div>
		
		
		<a name="contact"></a>
		<div class="box">
			<h2>Contact</h2>
			<p>Doing something interesting with this?</p><p>Contact <code>enquires (at) wellington.gen.nz</code> and let us know.</p>
			
		</div>
		
		
	</div>

</div>

#parse("includes/footer.vm")